"use strict";(self.webpackChunkdelixia=self.webpackChunkdelixia||[]).push([["7615"],{34226:function(e,a,i){i.r(a),i.d(a,{_DDSTextureLoader:()=>o});var s=i(17997),t=i(9573);class o{constructor(){this.supportCascades=!0}loadCubeData(e,a,i,o){let p,n=a.getEngine(),l=!1,r=1e3;if(Array.isArray(e))for(let i=0;i<e.length;i++){let s=e[i];a.width=(p=t.DDSTools.GetDDSInfo(s)).width,a.height=p.height,l=(p.isRGB||p.isLuminance||p.mipmapCount>1)&&a.generateMipMaps,n._unpackFlipY(p.isCompressed),t.DDSTools.UploadDDSLevels(n,a,s,p,l,6,-1,i),p.isFourCC||1!==p.mipmapCount?r=p.mipmapCount-1:n.generateMipMapsForCubemap(a)}else a.width=(p=t.DDSTools.GetDDSInfo(e)).width,a.height=p.height,i&&(p.sphericalPolynomial=new s.i),l=(p.isRGB||p.isLuminance||p.mipmapCount>1)&&a.generateMipMaps,n._unpackFlipY(p.isCompressed),t.DDSTools.UploadDDSLevels(n,a,e,p,l,6),p.isFourCC||1!==p.mipmapCount?r=p.mipmapCount-1:n.generateMipMapsForCubemap(a,!1);n._setCubeMapTextureParams(a,l,r),a.isReady=!0,a.onLoadedObservable.notifyObservers(a),a.onLoadedObservable.clear(),o&&o({isDDS:!0,width:a.width,info:p,data:e,texture:a})}loadData(e,a,i){let s=t.DDSTools.GetDDSInfo(e),o=(s.isRGB||s.isLuminance||s.mipmapCount>1)&&a.generateMipMaps&&Math.max(s.width,s.height)>>s.mipmapCount-1==1;i(s.width,s.height,o,s.isFourCC,()=>{t.DDSTools.UploadDDSLevels(a.getEngine(),a,e,s,o,1)})}}}}]);