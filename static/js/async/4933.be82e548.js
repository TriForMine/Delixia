"use strict";(self.webpackChunkdelixia=self.webpackChunkdelixia||[]).push([["4933"],{79903:function(e,t,s){s.r(t),s.d(t,{FlowGraphReceiveCustomEventBlock:()=>a});var r=s(46502),n=s(30741),i=s(16118),o=s(39021);class a extends r.N{constructor(e){for(let t in super(e),this.config=e,this.initPriority=1,this.config.eventData)this.registerDataOutput(t,this.config.eventData[t].type)}_preparePendingTasks(e){let t=e.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(t&&t.hasObservers()&&t.observers.length>o.l.MaxEventsPerType){this._reportError(e,`FlowGraphReceiveCustomEventBlock: Too many observers for event ${this.config.eventId}. Max is ${o.l.MaxEventsPerType}.`);return}let s=t.add(t=>{Object.keys(t).forEach(s=>{this.getDataOutput(s)?.setValue(t[s],e)}),this._execute(e)});e._setExecutionVariable(this,"_eventObserver",s)}_cancelPendingTasks(e){let t=e.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(t){let s=e._getExecutionVariable(this,"_eventObserver",null);t.remove(s)}else n.w1.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(e,t){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,i.H7)("FlowGraphReceiveCustomEventBlock",a)}}]);