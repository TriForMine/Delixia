"use strict";(self.webpackChunkdelixia=self.webpackChunkdelixia||[]).push([["3025"],{81226:function(e,t,s){s.d(t,{x:()=>r});var n=s(54520),i=s(12737),o=s(14581);class r extends n.Pd{constructor(e,t){super(e,t,3),this._analyzer=null}get analyzer(){return this._analyzer??(this._analyzer=new o.fG(this._subGraph))}get volume(){return(0,i.gB)(this._subGraph,"volume")}set volume(e){let t=(0,i.nP)(this._subGraph);if(!t)throw Error("No volume subnode");t.volume=e}dispose(){super.dispose(),this._analyzer?.dispose(),this._analyzer=null,this._subGraph.dispose()}}},76692:function(e,t,s){s.d(t,{Q:()=>i});var n=s(54520);class i extends n.Pd{constructor(e,t){super(e,t,3)}connect(e){if(!this._connect(e))throw Error("Connect failed")}disconnect(e){if(!this._disconnect(e))throw Error("Disconnect failed")}disconnectAll(){if(!this._downstreamNodes)throw Error("Disconnect failed");let e=this._downstreamNodes.values();for(let t=e.next();!t.done;t=e.next())if(!this._disconnect(t.value))throw Error("Disconnect failed")}}},83298:function(e,t,s){s.d(t,{AB:()=>r,Hf:()=>a,Jo:()=>o,hx:()=>u});var n=s(64594),i=s(76692);class o extends i.Q{constructor(e){super("Analyzer",e)}setOptions(e){this.fftSize=e.analyzerFFTSize??n.nB.fftSize,this.minDecibels=e.analyzerMinDecibels??n.nB.minDecibels,this.maxDecibels=e.analyzerMaxDecibels??n.nB.maxDecibels,this.smoothing=e.analyzerSmoothing??n.nB.smoothing}}function r(e){return e.getSubNode("Analyzer")}function a(e,t){return r(e)?.[t]??n.nB[t]}function u(e,t,s){e.callOnSubNode("Analyzer",e=>{e[t]=s})}},12737:function(e,t,s){s.d(t,{TT:()=>o,gB:()=>a,nP:()=>r});var n=s(76692);let i={volume:1};class o extends n.Q{constructor(e){super("Volume",e)}setOptions(e){this.volume=e.volume??i.volume}}function r(e){return e.getSubNode("Volume")}function a(e,t){return r(e)?.[t]??i[t]}},64594:function(e,t,s){s.d(t,{FU:()=>i,nB:()=>n,vw:()=>o});let n={fftSize:2048,minDecibels:-100,maxDecibels:-30,smoothing:.8};function i(e){return e.analyzerEnabled||void 0!==e.analyzerFFTSize||void 0!==e.analyzerMinDecibels||void 0!==e.analyzerMaxDecibels||void 0!==e.analyzerSmoothing}class o{get frequencyBinCount(){return this.fftSize/2}}},14581:function(e,t,s){s.d(t,{PR:()=>d,fG:()=>h,uy:()=>u});var n=s(11597),i=s(64594),o=s(83298);let r=null,a=null;function u(){return r||(r=new Uint8Array),r}function d(){return a||(a=new Float32Array),a}class h extends i.vw{constructor(e){super(),this._subGraph=e}get fftSize(){return(0,o.Hf)(this._subGraph,"fftSize")}set fftSize(e){(0,o.hx)(this._subGraph,"fftSize",e)}get isEnabled(){return null!==(0,o.AB)(this._subGraph)}get minDecibels(){return(0,o.Hf)(this._subGraph,"minDecibels")}set minDecibels(e){(0,o.hx)(this._subGraph,"minDecibels",e)}get maxDecibels(){return(0,o.Hf)(this._subGraph,"maxDecibels")}set maxDecibels(e){(0,o.hx)(this._subGraph,"maxDecibels",e)}get smoothing(){return(0,o.Hf)(this._subGraph,"smoothing")}set smoothing(e){(0,o.hx)(this._subGraph,"smoothing",e)}dispose(){let e=(0,o.AB)(this._subGraph);e&&(this._subGraph.removeSubNode(e),e.dispose())}async enableAsync(){return(0,o.AB)(this._subGraph)||await this._subGraph.createAndAddSubNode("Analyzer"),Promise.resolve()}getByteFrequencyData(){let e=(0,o.AB)(this._subGraph);return e?e.getByteFrequencyData():(n.Y.Warn("AudioAnalyzer not enabled"),this.enableAsync(),u())}getFloatFrequencyData(){let e=(0,o.AB)(this._subGraph);return e?e.getFloatFrequencyData():(n.Y.Warn("AudioAnalyzer not enabled"),this.enableAsync(),d())}}},16179:function(e,t,s){s.d(t,{n:()=>c});class n{constructor(){this._createSubNodePromises={},this._isDisposed=!1,this._subNodes={},this._onSubNodeDisposed=e=>{delete this._subNodes[e.name],this._onSubNodesChanged()}}callOnSubNode(e,t){let s=this.getSubNode(e);if(s){t(s);return}this._createSubNodePromisesResolved().then(()=>{let s=this.getSubNode(e);if(s){t(s);return}this.createAndAddSubNode(e).then(e=>{t(e)})})}createAndAddSubNode(e){var t;return(t=this._createSubNodePromises)[e]||(t[e]=this._createSubNode(e).then(e=>(this._addSubNode(e),e))),this._createSubNodePromises[e]}dispose(){for(let e of(this._isDisposed=!0,Object.values(this._subNodes)))e.dispose();this._subNodes={},this._createSubNodePromises={}}getSubNode(e){return this._subNodes[e]??null}async removeSubNode(e){await this._createSubNodePromisesResolved();let t=e.name;this._subNodes[t]&&delete this._subNodes[t],delete this._createSubNodePromises[t],this._onSubNodesChanged()}_createSubNodePromisesResolved(){return Promise.all(Object.values(this._createSubNodePromises))}_addSubNode(e){if(this._isDisposed){e.dispose();return}this._subNodes[e.name]=e,e.onDisposeObservable.addOnce(this._onSubNodeDisposed),this._onSubNodesChanged()}}var i=s(83298),o=s(12737),r=s(64594);async function a(e){return new u(e)}class u extends o.TT{constructor(e){super(e),this._volume=1,this.node=new GainNode(e._audioContext)}get volume(){return this._volume}set volume(e){this._volume=e,this.engine._setAudioParam(this.node.gain,e)}get _inNode(){return this.node}get _outNode(){return this.node}_connect(e){return!!super._connect(e)&&(e._inNode&&this.node.connect(e._inNode),!0)}_disconnect(e){return!!super._disconnect(e)&&(e._inNode&&this.node.disconnect(e._inNode),!0)}getClassName(){return"_VolumeWebAudioSubNode"}}var d=s(14581);async function h(e){return new l(e)}class l extends i.Jo{constructor(e){super(e),this._byteFrequencyData=null,this._floatFrequencyData=null,this._analyzerNode=new AnalyserNode(e._audioContext)}get fftSize(){return this._analyzerNode.fftSize}set fftSize(e){e!==this._analyzerNode.fftSize&&(this._analyzerNode.fftSize=e,this._clearArrays())}get _inNode(){return this._analyzerNode}get minDecibels(){return this._analyzerNode.minDecibels}set minDecibels(e){this._analyzerNode.minDecibels=e}get maxDecibels(){return this._analyzerNode.maxDecibels}set maxDecibels(e){this._analyzerNode.maxDecibels=e}get smoothing(){return this._analyzerNode.smoothingTimeConstant}set smoothing(e){this._analyzerNode.smoothingTimeConstant=e}dispose(){super.dispose(),this._clearArrays(),this._byteFrequencyData=null,this._floatFrequencyData=null,this._analyzerNode.disconnect()}getClassName(){return"_WebAudioAnalyzerSubNode"}getByteFrequencyData(){return this._byteFrequencyData&&0!==this._byteFrequencyData.length||(this._byteFrequencyData=new Uint8Array(this._analyzerNode.frequencyBinCount)),this._analyzerNode.getByteFrequencyData(this._byteFrequencyData),this._byteFrequencyData}getFloatFrequencyData(){return this._floatFrequencyData&&0!==this._floatFrequencyData.length||(this._floatFrequencyData=new Float32Array(this._analyzerNode.frequencyBinCount)),this._analyzerNode.getFloatFrequencyData(this._floatFrequencyData),this._floatFrequencyData}_clearArrays(){this._byteFrequencyData?.set((0,d.uy)()),this._floatFrequencyData?.set((0,d.PR)())}}class c extends n{constructor(e){super(),this._outputNode=null,this._owner=e}async init(e){let t=(0,r.FU)(e);if(t&&await this.createAndAddSubNode("Analyzer"),await this.createAndAddSubNode("Volume"),await this._createSubNodePromisesResolved(),t){let t=(0,i.AB)(this);if(!t)throw Error("No analyzer subnode.");t.setOptions(e)}let s=(0,o.nP)(this);if(!s)throw Error("No volume subnode.");if(s.setOptions(e),"_VolumeWebAudioSubNode"!==s.getClassName())throw Error("Not a WebAudio subnode.");if(this._outputNode=s.node,this._outputNode&&this._downstreamNodes){let e=this._downstreamNodes.values();for(let t=e.next();!t.done;t=e.next()){let e=t.value._inNode;e&&this._outputNode.connect(e)}}}get _inNode(){return this._outputNode}get _outNode(){return this._outputNode}_createSubNode(e){switch(e){case"Analyzer":return h(this._owner.engine);case"Volume":return a(this._owner.engine);default:throw Error(`Unknown subnode name: ${e}`)}}_onSubNodesChanged(){let e=(0,i.AB)(this),t=(0,o.nP)(this);e&&t&&t.connect(e)}}},49729:function(e,t,s){s.r(t),s.d(t,{_WebAudioMainBus:()=>r});var n=s(81226);class i extends n.x{constructor(e,t){super(e,t)}}var o=s(16179);class r extends i{constructor(e,t){super(e,t),this._subGraph=new r._SubGraph(this)}async _init(e){if(await this._subGraph.init(e),this.engine.mainOut&&!this._connect(this.engine.mainOut))throw Error("Connect failed");this.engine._addMainBus(this)}dispose(){super.dispose(),this.engine._removeMainBus(this)}get _inNode(){return this._subGraph._inNode}get _outNode(){return this._subGraph._outNode}_connect(e){return!!super._connect(e)&&(e._inNode&&this._outNode?.connect(e._inNode),!0)}_disconnect(e){return!!super._disconnect(e)&&(e._inNode&&this._outNode?.disconnect(e._inNode),!0)}getClassName(){return"_WebAudioMainBus"}}r._SubGraph=class extends o.n{get _downstreamNodes(){return this._owner._downstreamNodes??null}}}}]);